name: Daily KG Release Check

permissions:
  contents: write
  actions: write

# Trigger the workflow daily at 01:00 UTC
on:
  schedule:
    - cron: '0 1 * * *'  # every day at 01:00 UTC
  workflow_dispatch:  # also allows manual trigger

jobs:
  daily-check:
    runs-on: ubuntu-latest
    env:
      KNOWLEDGE_GRAPH_CATALOG: ${{ secrets.KNOWLEDGE_GRAPH_CATALOG }}
      DEUTSCHE_NATBIB: ${{ secrets.DEUTSCHE_NATBIB }}

    steps:
      # 1. Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # or any version you need

      # 2.1 Install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests SPARQLWrapper

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml requests

      # 4. Run the daily_check.py script
      - name: Run daily check
        run: python scripts/daily_check.py

      # 5. commit
      - name: Commit and push if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add knowledge-graphs/**/metadata.yaml
          if ! git diff --cached --quiet; then
            git commit -m "Update metadata via GitHub Actions"
            git push
          else
            echo "No changes to commit"
          fi

      # 6. Trigger Check URLs & Publish Knowledge Graphs workflow
      - name: Trigger Check URLs workflow
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'check_and_publish.yml',
              ref: 'main'
            })
